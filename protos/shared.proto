syntax = "proto3";

enum CommandType {
        GET_ELECTIONS = 0;
        GET_VALID_VOTER_GROUPS = 1;
        GET_VALID_VOTERS = 2;
        GET_PLAINTEXT_BALLOTS = 3;
        GET_ENCRYPTED_BALLOTS = 4;
        GET_PLAINTEXT_BALLOT = 5;
        GET_ENCRYPTED_BALLOT = 6;
        CAST_BALLOT = 7;
}

enum ResponseType {
        ERROR = 0;
        ELECTIONS = 1;
        VOTER_GROUPS = 2;
        VOTERS = 3;
        PLAINTEXT_BALLOTS = 4;
        CAST_ENCRYPTED_BALLOTS = 5;
        PLAINTEXT_BALLOT = 6;
        CAST_ENCRYPTED_BALLOT = 7;
}

message Command {
        CommandType type = 1;
        bytes data = 2;
        bytes pubkey = 3;
        bytes signature = 4;
}

message Response {
        ResponseType type = 1;
        bytes data = 2;
        bytes pubkey = 3;
        bytes signature = 4;
}

message PaginationMetadata {
        int32 lastId = 1;
}

message Candidate {
        int32 id = 1;
        bytes first_name = 2;
        bytes last_name = 3;
}

message TallyEntry {
        int32 id = 1;
        int32 candidate_id = 2;
        bytes encrypted_value = 3;
        bytes encryption_r = 4;
        int32 decrypted_value = 5;
}

message Tally {
        int32 id = 1;
        bool finalized = 2;
        repeated TallyEntry tally_entries = 3;
}

message WriteInTallyEntry {
        bytes value = 1;
        bytes encrypted_value = 2;
}

message ShuffleProof {

}

message ShuffleProofRequest {

}

message WriteInTally {
        int32 id = 1;
        repeated WriteInTallyEntry write_in_tally_entries_unshuffled = 2;
        repeated WriteInTallyEntry write_in_tally_entries_shuffled = 3;
        ShuffleProof shuffle_proof = 4;
}

message WriteInTallyRequest {
        PaginationMetadata pagination_metadata_unshuffled = 1;
        PaginationMetadata pagination_metadata_shuffled = 2;
        ShuffleProofRequest shuffle_proof_request = 3;
};

message Election {
        int32 id = 1;
        int32 start_time_utc = 2;
        int32 end_time_utc = 3;
        bool enabled = 4;
        bool allow_write_in = 5; 
        Tally tally = 6;
        repeated int32 authorized_voter_group_ids = 7;
        repeated Candidate candidates = 8;
}

message Elections {
        repeated Election elections = 1;
}

message VoterGroup {
        int32 id = 1;
        bytes name = 2;
}

message VoterGroups {
        repeated VoterGroup voter_groups = 1;
}

message Voter {
        int32 id = 1;
        bytes pubkey = 2;
        bytes reg_hash = 3;
        int32 voter_group_id = 4;
        bytes first_name = 5;
        bytes last_name = 6;
}

message Voters {
        repeated Voter voters = 1;
}

message EncryptedBallotEntry {
        int32 id = 1;
        int32 candidate_id = 2;
        bytes encrypted_value = 3;
}

message WriteInBallotEntry {
        int32 id = 1;
        bytes encrypted_value_key = 2;
        bytes encrypted_value_iv = 3;
        bytes encrypted_value = 4;
        int32 encrypted_value_pad_bytes = 5;
        bytes encrypted_hash = 6;
}

message EncryptedBallot {
        int32 election_id = 1;
        WriteInBallotEntry write_in_ballot_entry = 2;
        repeated EncryptedBallotEntry encrypted_ballot_entries = 3;
}

message CastEncryptedBallot {
        int32 id = 1;
        int32 voter_id = 2;
        int32 cast_at = 3;
        EncryptedBallot encrypted_ballot = 4;

        bytes cast_command_data = 5;
        
        // Signs cast_command_data
        bytes voter_signature = 6;

        // TODO: add a vote server sig here?
}

message CastEncryptedBallots {
        repeated CastEncryptedBallot cast_encrypted_ballots = 1;
}

message DecryptedBallotEntry {
        int32 id = 1;
        int32 decrypted_value = 2;
        int32 encryption_r = 3;
}

message PlaintextBallot {
        CastEncryptedBallot cast_encrypted_ballot = 1;
        repeated DecryptedBallotEntry decrypted_ballot_entries = 5;
}

message PlaintextBallots {
        repeated PlaintextBallot plaintext_ballots = 1;
}

message CastEncryptedBallotsRequest {
        PaginationMetadata pagination_metadata = 1;
        int32 election_id = 2;
};
