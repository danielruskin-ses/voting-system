syntax = "proto3";

enum CommandType {
        GET_ELECTIONS = 0;
        GET_VALID_VOTER_GROUPS = 1;
        GET_VALID_VOTERS = 2;
        GET_PLAINTEXT_BALLOTS = 3;
        GET_ENCRYPTED_BALLOTS = 4;
        GET_PLAINTEXT_BALLOT = 5;
        GET_ENCRYPTED_BALLOT = 6;
        CAST_BALLOT = 7;
}

enum ResponseType {
        ERROR = 0;
        ELECTIONS = 1;
        VOTER_GROUPS = 2;
        VOTERS = 3;
        PLAINTEXT_BALLOTS = 4;
        ENCRYPTED_BALLOTS = 5;
        PLAINTEXT_BALLOT = 6;
        ENCRYPTED_BALLOT = 7;
}

message Command {
        CommandType type = 1;
        bytes data = 2;
        bytes pubkey = 3;
        bytes signature = 4;
}

message Response {
        ResponseType type = 1;
        bytes data = 2;
        bytes pubkey = 3;
        bytes signature = 4;
}

message PaginationMetadata {
        int32 lastId = 1;
}

message Candidate {
        int32 id = 1;
        string first_name = 2;
        string last_name = 3;
}

message Election {
        int32 id = 1;
        int32 start_time_utc = 2;
        int32 end_time_utc = 3;
        bool enabled = 4;
        bool allow_write_in = 5;
        repeated int32 authorized_voter_group_ids = 6;
        repeated Candidate candidates = 7;
}

message Elections {
        repeated Election elections = 1;
}

message VoterGroup {
        int32 id = 1;
        bytes name = 2;
}

message VoterGroups {
        repeated VoterGroup voter_groups = 1;
}

message Voter {
        int32 id = 1;
        bytes pubkey = 2;
        bytes reg_hash = 3;
        int32 voter_group_id = 4;
        string first_name = 5;
        string last_name = 6;
}

message Voters {
        repeated Voter voters = 1;
}

message EncryptedBallotEntry {
        int32 id = 1;
        int32 candidate_id = 2;
        bytes encrypted_value = 3;
}

message EncryptedBallot {
        int32 id = 1;
        int32 source = 2;
        int32 voter_id = 3;
        int32 election_id = 4;
        bytes alternative_source_image_hash = 5;
        repeated EncryptedBallotEntry encrypted_ballot_entries = 6;
}

message EncryptedBallots {
        repeated EncryptedBallot encrypted_ballots = 1;
}

message DecryptedBallotEntry {
        int32 id = 1;
        int32 decrypted_value = 2;
        int32 encryption_r = 3;
}

message PlaintextBallot {
        EncryptedBallot encrypted_ballot = 1;
        repeated DecryptedBallotEntry decrypted_ballot_entries = 5;
}

message PlaintextBallots {
        repeated PlaintextBallot plaintext_ballots = 1;
}

